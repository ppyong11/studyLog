plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.studyLog.project'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //maridDB Driver
    implementation 'org.mariadb.jdbc:mariadb-java-client'

    //JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //QueryDSL 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'  // 버전은 프로젝트에 맞게
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //이메일 인증 관련 의존성
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //스웨거 의존성
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    //Redis 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //유효성 검사 의존성
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //JWT 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' //JSON 처리 (jackson 필요)

    //Prometheus
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
}

tasks.named('test') {
    useJUnitPlatform()
}
